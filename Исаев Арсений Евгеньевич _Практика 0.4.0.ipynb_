{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"164mKoI4a7n8Gfq0Jmkn8lE_EDKOtZ_3n","timestamp":1728623276895},{"file_id":"1ZwSBZ3XI_wE-I4fLWA5wTMNwpfTDz2ov","timestamp":1728565946670}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Введите ваше ФИО:"],"metadata":{"id":"k8oVfdwrMXyc"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"5mcBLsKMI1-5"},"outputs":[],"source":["Исаев Арсений Евгеньевич"]},{"cell_type":"markdown","source":["***Дисклеймер***\n","\n","В данной практике запрещено использования функций:\n","\n","\n","*   sum()\n","*   min()\n","*   max()\n","*   average()\n","*   reversed()\n","*   sorted()\n","*   готовые функции или библиотеки\n"],"metadata":{"id":"8HbYUbm3Jw3o"}},{"cell_type":"markdown","source":["\n","**Задача 1:**\n","\n","\n","\n","Интернет-магазин предлагает следующие условия скидок:\n","\n","*   Для заказов больше 1000 единиц, клиент получает скидку 5%. Если клиент использует промокод SUPERDISCOUNT, он получает скидку 10% (вместо 5%).\n","*  Для заказов более 5000 единиц, клиент получает скидку 15%, а использование промокода SUPERDISCOUNT увеличивает скидку до 20% (вместо 15%).\n","\n","Этап 1:\n","Ввод:\n","```\n","Введите стоимость единицы товара: 5\n","Введите количество товара: 1001\n","Введите промокод: GiVEMEDISCONT\n","```\n","\n","Вывод:\n","\n","```\n","Ваша скидка: 5%\n","Итоговая сумма: 4754.75\n","```\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"HmX0c6YPJSQr"}},{"cell_type":"code","source":["a = float(input(\"Введите стоимость единицы товара: \"))\n","b = int(input(\"Введите количество товара: \"))\n","c = input(\"Введите промокод: \")\n","\n","c = 0\n","\n","if b > 5000:\n","    c = 15\n","    if c == \"SUPERDISCOUNT\":\n","        c = 20\n","elif b > 1000:\n","    c = 5\n","    if c == \"SUPERDISCOUNT\":\n","        c = 10\n","\n","z = a * b * (1 - c / 100)\n","\n","print(\"Ваша скидка:\", c, \"%\")\n","print(\"Итоговая сумма:\", z)"],"metadata":{"id":"OAIMIpklMN5D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733051109419,"user_tz":-300,"elapsed":223113,"user":{"displayName":"Арсений Исаев","userId":"16271015508624812760"}},"outputId":"57eab6a7-faa2-46bd-c3ae-84bc416187b7"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите стоимость единицы товара: 65665\n","Введите количество товара: 1\n","Введите промокод: SUPERDISCOUNT\n","Ваша скидка: 0 %\n","Итоговая сумма: 65665.0\n"]}]},{"cell_type":"markdown","source":["**Задача 2:**\n","\n","Этап 1:\n","Напишите программу способную отфильтровать список и вывести только положительные элементы\n","\n","\n","Ввод:\n","```\n","-1 5 1 2 -3\n","```\n","\n","Вывод:\n","\n","```\n","5 1 2\n","```\n","\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"eeRVWpuLNGJ0"}},{"cell_type":"code","source":["chisla = input(\"Введите числа через пробел: \")\n","\n","elements = chisla.split()\n","\n","positive = []\n","\n","for element in elements:\n","\n","    number = int(element)\n","\n","    if number > 0:\n","\n","        positive.append(str(number))\n","\n","print(\" \".join(positive))\n"],"metadata":{"id":"Xbi6bL0WOE9N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Задача 3:**\n","\n","Этап 1:\n","Напишите программу реализующую Алгоритм Евклида\n","\n","\n","> Алгоритм Евклида – это алгоритм нахождения наибольшего общего делителя (НОД) пары целых чисел.\n","\n","Чуть подробнее, если вы забыли: [link](https://skysmart.ru/articles/mathematic/naibolshij-obshchij-delitel)\n","\n","\n","Ввод:\n","```\n","30 18\n","```\n","\n","Вывод:\n","\n","```\n","6\n","```\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n"],"metadata":{"id":"lV-w6G-POa6F"}},{"cell_type":"code","source":["def euclidean_nod(a, b):\n","    while b:\n","        a, b = b, a % b\n","    return a\n","\n","if __name__ == \"__main__\":\n","    a, b = map(int, input(\"Введите два целых числа через пробел: \").split())\n","    print(euclidean_nod(a, b))\n"],"metadata":{"id":"X2n6fnd91yt7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733060786472,"user_tz":-300,"elapsed":14824,"user":{"displayName":"Арсений Исаев","userId":"16271015508624812760"}},"outputId":"e3eee973-1557-435e-bab7-89d5aadac2e5"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите два целых числа через пробел: 40 55\n","5\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"43Dl5tIpOZsu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Задача 4:**\n","\n","Этап 1:\n","Напишите функцию программу, которая принимает строку и возвращает список слов и количество их упомнинаний в предложении\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","apple banana apple\n","```\n","\n","Вывод:\n","\n","```\n","apple: 2,\n","banana: 1\n","```"],"metadata":{"id":"WIfPFxpsO0zL"}},{"cell_type":"code","source":["string = input()\n","words = []\n","word = \"\"\n","for char in string:\n","    if char != \" \":\n","        word += char\n","    else:\n","        if word:\n","            words.append(word)\n","            word = \"\"\n","if word:\n","    words.append(word)\n","\n","count = {}\n","for word in words:\n","    if word in count:\n","        count[word] += 1\n","    else:\n","        count[word] = 1\n","\n","output = \"\"\n","for key in count:\n","    output += f\"{key}: {count[key]}, \"\n","\n","if output:\n","    output = output[:-2]\n","\n","print(output)"],"metadata":{"id":"DgsmFeW5Po_x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728627888857,"user_tz":-300,"elapsed":20733,"user":{"displayName":"Арсений Исаев","userId":"16271015508624812760"}},"outputId":"f194f7a8-bc8d-406a-a518-2b2a5c6e172c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["apple banana apple apple banana apple apple banana apple apple banana apple apple banana apple apple banana apple apple banana apple\n","apple: 14, banana: 7\n"]}]},{"cell_type":"markdown","source":["**Задача 5:**\n","\n","Этап 1:\n","Детектор анаграмм Напишите программу на Python, которая принимает в качестве входных данных две строки и проверяет, являются ли они анаграммами друг друга\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","listen, silent\n","```\n","\n","Вывод:\n","\n","```\n","True\n","```"],"metadata":{"id":"5BmIJLUZP9I-"}},{"cell_type":"code","source":["str1 = input(\"Введите первую строку: \").strip()\n","str2 = input(\"Введите вторую строку: \").strip()\n","\n","def are_anagrams(str1, str2):\n","    return sorted(str1) == sorted(str2)\n","\n","result = are_anagrams(str1, str2)\n","print(result)\n"],"metadata":{"id":"7LNW8DuHQJwH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733051448492,"user_tz":-300,"elapsed":8864,"user":{"displayName":"Арсений Исаев","userId":"16271015508624812760"}},"outputId":"853803f6-8e74-4fcb-8ea0-9145bba6321e"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите первую строку: listen\n","Введите вторую строку: sfssf\n","False\n"]}]},{"cell_type":"markdown","source":["**Задача 6:**\n","\n","Шифр ​​Цезаря\n","\n","Напишите программу на Python, которая реализует шифр Цезаря, простой метод шифрования, который заменяет каждую букву буквой на фиксированное количество позиций вниз по алфавиту. Программа должна запрашивать у пользователя сообщение и значение сдвига, а затем шифровать и расшифровывать сообщение.\n","Подробнее о шифре Цезаря: [link](https://habr.com/ru/articles/534058/)\n","\n","Этап 1:\n","\n","Напишите код для реализации данной задачи\n","\n","Этап 2:\n","\n","Оформите код в виде нескольких функций:\n","\n","* Зашифровывает сообщение\n","* Расшифровывает сообщение"],"metadata":{"id":"-SIWYSq2QKBh"}},{"cell_type":"code","source":["def caesar_encrypt(message, shift):\n","    encrypted_message = \"\"\n","    for char in message:\n","        if char.isalpha():\n","            shift_base = ord('A') if char.isupper() else ord('a')\n","            encrypted_message += chr((ord(char) - shift_base + shift) % 26 + shift_base)\n","        else:\n","            encrypted_message += char\n","    return encrypted_message\n","\n","def caesar_decrypt(encrypted_message, shift):\n","    return caesar_encrypt(encrypted_message, -shift)\n","\n","def main():\n","    message = input(\"Введите сообщение: \")\n","    shift = int(input(\"Введите значение сдвига: \"))\n","\n","    encrypted = caesar_encrypt(message, shift)\n","    print(\"Зашифрованное сообщение:\", encrypted)\n","\n","    decrypted = caesar_decrypt(encrypted, shift)\n","    print(\"Расшифрованное сообщение:\", decrypted)\n","\n","if __name__ == \"__main__\":\n","    main()\n"],"metadata":{"id":"anThYirsQe6N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733061679931,"user_tz":-300,"elapsed":33646,"user":{"displayName":"Арсений Исаев","userId":"16271015508624812760"}},"outputId":"21fe5f3d-fdb1-4ba7-b63a-08f40f1c4f1d"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите сообщение: Привет\n","Введите значение сдвига: 5\n","Зашифрованное сообщение: Hiauxk\n","Расшифрованное сообщение: Cdvpsf\n"]}]},{"cell_type":"markdown","source":["**Задача 7**\n","\n","Задача: «Банковская система»\n","\n","Создайте программу Python, которая имитирует базовую банковскую систему. Система должна иметь следующие функции:\n","\n","Требования\n","*   Система должна позволять клиентам создавать счета и хранить их балансы.\n","*   Система должна позволять клиентам вносить и снимать деньги со своих счетов.\n","*   Система должна позволять клиентам проверять свой текущий баланс.\n","*   Система должна позволять клиентам переводить деньги между счетами.\n","*   Система должна отслеживать транзакции (депозиты, снятия и переводы) и иметь возможность печатать детали транзакций.\n","\n","\n","Задачи\n","1. Реализуйте банковскую систему, используя только базовые конструкции Python, такие как def, lists, if, elif и else, без классов или словарей.\n","Определите функции для создания счетов, внесения и снятия денег, получения балансов счетов, перевода денег между счетами, а также создания и печати транзакций.\n","2. Напишите основную функцию, которая демонстрирует использование банковской системы путем создания счетов, внесения и снятия денег и перевода денег между счетами.\n","3. Бонусное задание\n","Реализуйте способ хранения и печати истории транзакций для каждого счета.\n","\n","Ограничения\n","Не используйте классы или словари.\n","Используйте только базовые конструкции Python, такие как def, lists, if, elif и else.\n"],"metadata":{"id":"avFZRRXrQz9O"}},{"cell_type":"code","source":["accounts = []\n","transactions = []\n","\n","def create_account(balance):\n","    accounts.append(balance)\n","    transactions.append([])\n","\n","def deposit(account_index, amount):\n","    if account_index < len(accounts):\n","        accounts[account_index] += amount\n","        transactions[account_index].append(f\"Deposit: {amount}\")\n","\n","def withdraw(account_index, amount):\n","    if account_index < len(accounts) and accounts[account_index] >= amount:\n","        accounts[account_index] -= amount\n","        transactions[account_index].append(f\"Withdraw: {amount}\")\n","\n","def check_balance(account_index):\n","    if account_index < len(accounts):\n","        return accounts[account_index]\n","    return None\n","\n","def transfer(from_account, to_account, amount):\n","    if from_account < len(accounts) and to_account < len(accounts) and accounts[from_account] >= amount:\n","        accounts[from_account] -= amount\n","        accounts[to_account] += amount\n","        transactions[from_account].append(f\"Transfer to account {to_account}: {amount}\")\n","        transactions[to_account].append(f\"Transfer from account {from_account}: {amount}\")\n","\n","def print_transactions(account_index):\n","    if account_index < len(transactions):\n","        for transaction in transactions[account_index]:\n","            print(transaction)\n","\n","def main():\n","    create_account(100)\n","    create_account(200)\n","\n","    deposit(0, 50)\n","    withdraw(1, 30)\n","    transfer(0, 1, 20)\n","\n","    print(\"Баланс первого счета:\", check_balance(0))\n","    print(\"Баланс второго счета:\", check_balance(1))\n","\n","    print(\"История транзакций первого счета:\")\n","    print_transactions(0)\n","\n","    print(\"История транзакций второго счета:\")\n","    print_transactions(1)\n","\n","main()\n"],"metadata":{"id":"dWEW10zIRwjs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1733073432280,"user_tz":-300,"elapsed":250,"user":{"displayName":"Арсений Исаев","userId":"16271015508624812760"}},"outputId":"90492b2d-90ad-466a-aa8f-d9391b1a7a55"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Баланс первого счета: 130\n","Баланс второго счета: 190\n","История транзакций первого счета:\n","Deposit: 50\n","Transfer to account 1: 20\n","История транзакций второго счета:\n","Withdraw: 30\n","Transfer from account 0: 20\n"]}]}]}